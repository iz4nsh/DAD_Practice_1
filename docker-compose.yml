version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: cpd
      MYSQL_USER: user
      MYSQL_PASSWORD: userpass
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: userpass
    networks:
      - backend

  instance-service:
    build:
      context: ./instanceservice
    container_name: instance-service
    depends_on:
      - rabbitmq
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: user
      SPRING_RABBITMQ_PASSWORD: userpass
    networks:
      - backend

  disk-service:
    build:
      context: ./diskservice
    container_name: disk-service
    depends_on:
      - rabbitmq
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: user
      SPRING_RABBITMQ_PASSWORD: userpass
    networks:
      - backend

  apiservice:
    build:
      context: ./apiservice
    container_name: apiservice
    depends_on:
      - db
      - rabbitmq
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/cpd
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: userpass
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: user
      SPRING_RABBITMQ_PASSWORD: userpass
    ports:
      - "8080:8080"
    networks:
      - backend

  haproxy:
    image: haproxy:2.7
    container_name: haproxy
    ports:
      - "80:80"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      - backend
    depends_on:
      - instance-service
      - disk-service
      - apiservice

volumes:
  db_data:

networks:
  backend:
